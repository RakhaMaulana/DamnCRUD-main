name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mariadb:
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: damncrud
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd "mysqladmin ping -h 127.0.0.1 -u root --password=root || exit 1" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install Firefox and Geckodriver
      run: |
        sudo apt-get update
        sudo apt-get remove -y firefox snapd  # Hapus Snap dan Firefox bawaan
        sudo add-apt-repository -y ppa:mozillateam/ppa
        echo 'Package: *' | sudo tee /etc/apt/preferences.d/mozilla-firefox
        echo 'Pin: release o=LP-PPA-mozillateam' | sudo tee -a /etc/apt/preferences.d/mozilla-firefox
        echo 'Pin-Priority: 1001' | sudo tee -a /etc/apt/preferences.d/mozilla-firefox
        sudo apt-get update
        sudo apt-get install -y firefox
        wget -q https://github.com/mozilla/geckodriver/releases/latest/download/geckodriver-linux64.tar.gz
        tar -xzf geckodriver-linux64.tar.gz
        sudo mv geckodriver /usr/local/bin/


    - name: Install Selenium and Pytest
      run: |
        pip install --upgrade pip
        pip install selenium pytest pytest-xdist

    - name: Wait for MariaDB to be ready
      run: |
        for i in {1..30}; do
          if mysql -h 127.0.0.1 --protocol=tcp -u root --password=root -e 'SELECT 1' &> /dev/null; then
            echo "MariaDB is ready!"
            exit 0
          fi
          echo "Waiting for MariaDB..."
          sleep 2
        done
        echo "MariaDB did not start in time" >&2
        exit 1

    - name: Import database schema
      run: |
        mysql -h 127.0.0.1 --protocol=tcp -u root --password=root damncrud < db/damncrud.sql

    - name: Run Selenium Grid (Standalone Firefox)
      run: |
        docker run -d -p 4444:4444 --name selenium-grid selenium/standalone-firefox

    - name: Wait for Selenium Grid to be ready
      run: |
        for i in {1..30}; do
          if curl -s http://localhost:4444/wd/hub/status | grep '"ready":true' &> /dev/null; then
            echo "Selenium Grid is ready!"
            exit 0
          fi
          echo "Waiting for Selenium Grid..."
          sleep 2
        done
        echo "Selenium Grid did not start in time" >&2
        exit 1

    - name: Run tests in parallel
      run: |
        pytest --maxfail=1 --disable-warnings -n 4
